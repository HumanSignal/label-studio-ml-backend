version: "3.8"

services:

  tesseract:
    container_name: tesseract
    image: heartexlabs/label-studio-ml-backend:tesseract-master
    build:
      context: .
      args:
        TEST_ENV: ${TEST_ENV}
    ports:
      - 9090:9090
    volumes:
      - "./data/server:/data"
    environment:
      - LOG_LEVEL=DEBUG

      # Specify the Label Studio URL and API key to access
      # uploaded, local storage and cloud storage files.
      # Do not use 'localhost' as it does not work within Docker containers.
      # Use prefix 'http://' or 'https://' for the URL always.
      # Determine the actual IP using 'ifconfig' (Linux/Mac) or 'ipconfig' (Windows).
      - LABEL_STUDIO_HOST=
      # specify the access token for the label studio if you use file upload
      - LABEL_STUDIO_ACCESS_TOKEN=
      # set these variables to use Minio as a storage backend
      - AWS_ACCESS_KEY_ID=your-MINIO_ROOT_USER
      - AWS_SECRET_ACCESS_KEY=your-MINIO_ROOT_PASSWORD
      - AWS_ENDPOINT=http://host.docker.internal:9000

  minio:
    container_name: minio
    image: bitnami/minio:latest
    environment:
      - MINIO_ROOT_USER=<admin username>
      - MINIO_ROOT_PASSWORD=<admin password>
      - MINIO_API_CORS_ALLOW_ORIGIN=*
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ".data/storage:/data"
    command: server /data --console-address ":9001"

